{"version":3,"sources":["components/pages/config/Config.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","valido","backgroundColor","margin","invalido","document","title","Config","props","React","useState","nuevoNombre","setNuevoNombre","nuevoPass","setNuevoPass","classes","error","setError","user","component","maxWidth","className","variant","container","item","xs","sm","autoComplete","name","fullWidth","id","label","autoFocus","onChange","e","target","value","length","justify","type","color","submit","onClick","nombre","updateProfile","displayName","then","catch","code","console","log","message","window","location","assign","providerData","providerId","password","updatePassword","align"],"mappings":"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","file":"static/js/17.32b15f1a.chunk.js","sourcesContent":["//Importacion de React.\nimport React, { Fragment, useState } from 'react';\n//Importaciones componentes Material-UI.\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\n//Importacion para el tooltip.\nimport Tooltip from '@material-ui/core/Tooltip';\n\n//Constante de configuracion del estilo visual.\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(3),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  valido: {\n    backgroundColor: '#fafafa',\n    margin: theme.spacing(1)\n  },\n  invalido: {\n    backgroundColor: '#b71c1c',\n    margin: theme.spacing(1)\n  }\n}));\n//Asignacion de titulo al documento.\ndocument.title = 'Invertir Argentina - Configuración';\n\n//Contenido del componente.\nconst Config = props => {\n  //Constante de estado, para setear el nombre en la base de Firebase.\n  const [nuevoNombre, setNuevoNombre] = React.useState('nick');\n  //Constante de estado, para setear la contraseña en la base de Firebase.\n  const [nuevoPass, setNuevoPass] = React.useState('');\n  //Constante para setear las opciones visuales.\n  const classes = useStyles();\n  //Constante para manejar el mensaje dado al usuario, sobre errores.\n  const [error, setError] = useState('');\n  //Funcion para actualizar el nombre de perfil, en la base de Firebase.\n  const actualizarPerfil = nombre => {\n    if (nombre.length > 3 && nombre.length <= 15) {\n      props.user.updateProfile({\n        displayName: nombre,\n      }).then(function () {\n        setNuevoNombre(nombre);\n        setError('El nombre de ha actualizado correctamente. Puedes recargar la página para ver la actualización de estado.');\n      }).catch(function (error) {\n        switch (error.code) {\n          //Code auth/requires-recent-login.\n          case 'auth/requires-recent-login':\n            setError('Es necesario que relogues para validar tus credenciales. Antes de que puedas cambiar tu nick.');\n            console.log(`Si estás viendo esto, puedes contactarte con alguién de la administración para tratar este error:   ${error.code} y ${error.message}    .Gracias por tu tiempo y disculpa los inconvenientes.`);\n            break;\n          default:\n            window.location.assign('error');\n            console.log(`Si estás viendo esto, puedes contactarte con alguién de la administración para tratar este error: ${error} Gracias por tu tiempo y disculpa los inconvenientes.`);\n        }\n      });\n    };\n  };\n  //Funcion para actualizar la contraseña, en la base de Firebase.\n  const actualizarPass = password => {\n    if (password.length > 5 && password.length <= 15) {\n      props.user.updatePassword(password).then(function () {\n        window.location.assign('home');\n      }).catch(error => {\n        switch (error.code) {\n          //Code auth/requires-recent-login.\n          case 'auth/requires-recent-login':\n            setError('Es necesario que relogues para validar tus credenciales. Antes de que puedas cambiar tu nick.');\n            console.log(`Si estás viendo esto, puedes contactarte con alguién de la administración para tratar este error:   ${error.code} y ${error.message}    .Gracias por tu tiempo y disculpa los inconvenientes.`);\n            break;\n          //Code auth/weak-password.\n          case 'auth/weak-password':\n            setError('La nueva contraseña, no es lo suficientemente fuerte. Puedes probar con otra menos vulnerable.');\n            console.log(`Si estás viendo esto, puedes contactarte con alguién de la administración para tratar este error:   ${error.code} y ${error.message}    .Gracias por tu tiempo y disculpa los inconvenientes.`);\n            break;\n          default:\n            window.location.assign('error');\n            console.log(`Si estás viendo esto, puedes contactarte con alguién de la administración para tratar este error: ${error} Gracias por tu tiempo y disculpa los inconvenientes.`);\n        }\n      });\n    };\n  };\n  //Condicion de renderizado, dependiendo si se está logeado o no.\n  if (props.user !== null) {\n    return (\n      <Container component=\"main\" maxWidth=\"md\">\n        <Paper className={classes.paper}>\n          {/*Inicio de la parte de la vista, relacionado al cambio de nick.*/}\n          <Typography component=\"h1\" variant=\"h4\">\n            Aquí puedes cambiar tu nombre de usuario:\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <Tooltip title=\"El nuevo nombre que decidas, tiene que tener como mínimo 4 carácteres y como máximo 15 carácteres.\">\n                <TextField\n                  autoComplete=\"cambiarnombre\"\n                  name=\"Cambiar Nombre\"\n                  variant=\"outlined\"\n                  fullWidth\n                  id=\"cambiarnombre\"\n                  label=\"Nuevo Nombre\"\n                  autoFocus\n                  onChange={e => setNuevoNombre(e.target.value)}\n                  className={nuevoNombre.length > 3 && nuevoNombre.length <= 15 ? classes.valido : classes.invalido}\n                />\n              </Tooltip>\n            </Grid>\n            <Grid item xs={12} sm={6} container justify=\"center\" alignItems=\"center\">\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={() => { actualizarPerfil(nuevoNombre) }}\n              >\n                Cambiar Nombre\n              </Button>\n            </Grid>\n          </Grid>\n          {/*Condicional para mostrar un error visual, en cambio de nick.*/}\n          {nuevoNombre.length > 3 && nuevoNombre.length <= 15 ? \n          <Typography component=\"h3\" variant=\"overline\">\n            Tú nuevo nombre de usuario será: {nuevoNombre}\n          </Typography> :\n            <Typography component=\"h3\" variant=\"overline\">\n              Tú nuevo nombre tiene que tener entre 4 carácteres a 15 carácteres.\n          </Typography>}\n          {/*En el caso que el usuario se conecta a travez del provedor de password, que corresponde a email y contraseña, se le dara la opcion de poder cambiarlo. No se renderiza en caso de otros proveedores, como facebook, google u otros.*/}\n          {props.user.providerData[0].providerId === 'password' &&\n            <Fragment>\n              <Typography component=\"h1\" variant=\"h4\">\n                Cambiar Contraseña:\n              </Typography>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <Tooltip title=\"La nueva contraseña que decidas, tiene que tener como mínimo 6 carácteres y como máximo 15 carácteres.\">\n                    <TextField\n                      autoComplete=\"cambiarcontra\"\n                      name=\"Cambiar Contra\"\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"cambiarcontra\"\n                      label=\"Nueva Contraseña\"\n                      type=\"password\"\n                      autoFocus\n                      onChange={e => setNuevoPass(e.target.value)}\n                      className={nuevoPass.length > 5 && nuevoPass.length <= 15 ? classes.valido : classes.invalido}\n                    />\n                  </Tooltip>\n                </Grid>\n                <Grid item xs={12} sm={6} container justify=\"center\" alignItems=\"center\">\n                  <Button\n                    type=\"submit\"\n                    fullWidth\n                    variant=\"contained\"\n                    color=\"primary\"\n                    className={classes.submit}\n                    onClick={() => { actualizarPass(nuevoPass) }}\n                  >\n                    Cambiar Contraseña\n              </Button>\n                </Grid>\n              </Grid>\n              {/*Condicional para mostrar un error visual, en cambio de password.*/}\n              {nuevoPass.length > 5 && nuevoPass.length <= 15 ? \n              <Typography component=\"h3\" variant=\"overline\">\n                La nueva contraseña cumple los requerimientos.\n              </Typography> :\n              <Typography component=\"h3\" variant=\"overline\">\n                Tú nueva contraseña tiene que tener entre 6 carácteres a 15 carácteres.\n              </Typography>}\n            </Fragment>}\n        </Paper>\n        <Typography component=\"h3\" variant=\"h4\" align=\"center\" color=\"textPrimary\">{error}</Typography>\n      </Container>\n    );\n  } else {\n  //Redireccionamiento que hacemos en caso de no estar logeado.\n    window.location.assign('login');\n    return null;\n  };\n};\n\nexport default Config;"],"sourceRoot":""}